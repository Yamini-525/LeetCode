import java.util.*;
public class singlylinkedlist{
     private  static ListNode head;
     private static class ListNode{
      private int data;
      private ListNode next;
        public ListNode(int data)
        {
            this.data=data;
            this.next=null;
        }
    }
    public void display()
    {
        ListNode current=head;
        while(current!=null)
        {
            System.out.print(current.data+"-->");
            current=current.next;
        }
        System.out.print("null");
    }
    public void insertbeg(int value)
    {
        ListNode newnode=new ListNode(value);
        if(head==null)
        {
            head=newnode;
        }
        else
        {
           newnode.next=head;
           head=newnode;
        }
    }
  public void insertlast(int value) {
    ListNode newnode = new ListNode(value);
    if (head == null) {
        head = newnode;
    } else {  
        ListNode current = head;
        while (current.next != null) {
            current = current.next;
        }
        current.next = newnode;
    }
}
public void atpos(int value,int position)
{
    ListNode newnode=new ListNode(value);
    if(position==1)
    {
        newnode.next=head;
        head=newnode;
    }
    else
    {
        ListNode previous=head;
        int count=1;
        while(count<position-1)
        {
            previous=previous.next;
            count++;
        }
        ListNode current=previous.next;
        newnode.next=current;
        previous.next=newnode;
    }
}
public static ListNode delfirst(){
     ListNode temp=head;
     if(head==null)
     {
         return null;
     }
     else
     {
         head=head.next;
         temp.next=null;
         return temp;
     }
}
public static ListNode dellast()
{
    if(head==null || head.next==null)
    {
        return head;
    }
    ListNode current=head;
    ListNode previous=null;
  while(current.next!=null)
  {
      previous=current;
      current=current.next;
  }
  previous.next=null;
  return current;
    
}
public static ListNode reverse()
{
    ListNode current=head;
    ListNode previous=null;
    ListNode next=null;
  while(current!=null)
  {
      next=current.next;
      current.next=previous;
      previous=current;
      current=next;
  }
  return previous;
}
public static ListNode delatpos(int position)
{
    if(position==1)
    {
       head=head.next;
       return head;
    }
    else
    {
        ListNode previous=head;
        int count=1;
        while(count<position-1)
        {
            previous=previous.next;
            count++;
        }
        ListNode current=previous.next;
        previous.next=current.next;
        return current;
        
    }
}
    public static void main(String args[])
    {
        singlylinkedlist s1=new singlylinkedlist();
        head=new ListNode(10);
        ListNode second=new ListNode(20);
        ListNode third=new ListNode(30);
        ListNode fourth=new ListNode(40);
        head.next=second;
        second.next=third;
        third.next=fourth;
        s1.insertbeg(9);
        s1.insertlast(50);
        s1.atpos(12,2);
        s1.delfirst();
        s1.dellast();
        s1.delatpos(5);
        s1.display();
       head = s1.reverse(); // Update head to the new head returned by reverse()
    System.out.println(); 
    s1.display(); 
    }
}
